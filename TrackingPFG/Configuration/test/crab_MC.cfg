[CRAB]

jobtype = cmssw
scheduler = glite
#scheduler = caf
### NOTE: just setting the name of the server (pi, lnl etc etc )
###       crab will submit the jobs to the server...
#server_name = bari
#
[CMSSW]

### The data you want to access (to be found on DBS)

#dbs_url = http://cmsdbsprod.cern.ch/cms_dbs_ph_analysis_01/servlet/DBSServlet
#datasetpath=/MinBias/Summer09-START3X_V22A_900GeV-v1/GEN-SIM-RECO 
#/MinBias/Summer09-START3X_V25_preproduction-v2/GEN-SIM-RECO  # V25 used for recontruction, no replace
#/MinBias/Spring10-START3X_V25_356ReReco-v2/GEN-SIM-RECO  # V25B used for reconstruction, no replace
#/MinBias/Spring10-START3X_V26A_356ReReco-v1/GEN-SIM-RECO # V26A used for reconstruction with replace
#/MinBias/Spring10-START3X_V26A_357ReReco-v3/GEN-SIM-RECO # V26A used for reconstruction with replace
#/MinBias/Spring10-START3X_V26A_356ReReco-v1/GEN-SIM-RECO # V26A used for reconstruction with replace
#/MinBias/Spring10-START3X_V25B_156BxLumiPileUp-v1/GEN-SIM-RECO # V25B used for reconstruction with replace
#/MinBias/Spring10-START3X_V25B_356ReReco-v1/GEN-SIM-RECO # V25B used for reconstruction with replace
#datasetpath=/MinBias/Summer09-START3X_V22A_900GeV-v1/GEN-SIM-RECO 
#datasetpath=/MinBias/Summer09-STARTUP3X_V8K_900GeV-v1/GEN-SIM-RECO 
#datasetpath=/MinBias/Summer09-STARTUP3X_V8K_900GeV_P0-v1/GEN-SIM-RECO 
#datasetpath=/MinBias/Summer09-STARTUP3X_V8K_900GeV_ProQ20-v1/GEN-SIM-RECO 
#datasetpath=/MinBias/Summer09-STARTUP3X_V8K_900GeV_DW-v1/GEN-SIM-RECO 
#datasetpath=/MinBiasCW900A/Summer09-STARTUP3X_V8K_900GeV-v1/GEN-SIM-RECO 
#datasetpath=/MinBias/Spring10-START3X_V26A_357ReReco-v3/GEN-SIM-RECO 
#datasetpath=/MinBias/Spring10-MC_3XY_V25_S09_preproduction-v2/GEN-SIM-RECO 
#datasetpath=/MinBias_7TeV-pythia8/Spring10-START3X_V26B-v1/GEN-SIM-RECO 
#datasetpath=/QCD_Pt-15_7TeV-pythia6/Spring10-START3X_V26B-v1/GEN-SIM-RECO 
#datasetpath=/MinBias_TuneD6T_7TeV-pythia6/Summer10-START36_V10_SP10-v1/GEN-SIM-RECODEBUG
#datasetpath=/MinBias_TuneZ2_7TeV-pythia6/Fall10-START38_V12_preproduction-v1/GEN-SIM-RECODEBUG
#datasetpath=/WToMuNu_TuneZ2_7TeV-pythia6/Fall10-START38_V10-PU_E7TeV_AVE_1_BX156-v3/GEN-SIM-RECO
datasetpath=/NeutrinoGun_Pt-2To20/Fall10-START38_V10-PU_E7TeV_AVE_1_BX156-v3/GEN-SIM-RECO 
pset=/afs/cern.ch/cms/tracking/workareas/CMSSW_3_8_2_patch1/src/TrackingPFG/Configuration/python/TrackingPFG_MC_cfg.py

#use_parent = 1
total_number_of_events=60000000
events_per_job = 50000

#runselection=124022

#lumi_mask=jsonls_preprod.txt
#total_number_of_lumis =-1
#lumis_per_job = 5

### The output files (comma separated list)
#output_file = infos.log,apvNoisy.root,beamgas.root,ntuple_conversion_test_data.root
#output_file = ntuple_conversion_test_data.root,ntuple_conversion_MinBias_data.root,ntuple_conversion_Jet6U_data.root
#output_file = ntuple_conversion_test_data.root

[USER]

### OUTPUT files Management
##  output back into UI
return_data = 1

### To use a specific name of UI directory where CRAB will create job to submit (with full path).
### the default directory will be "crab_0_data_time"
#ui_working_dir = /full/path/Name_of_Directory
ui_working_dir = /afs/cern.ch/cms/tracking/output/neutrino_pythia6_Z2_pilepup_Fall10_preprod
#ui_working_dir = /afs/cern.ch/cms/tracking/output/WtoMuNu_pythia6_Z2_pilepup_Fall10_preprod
#ui_working_dir = /afs/cern.ch/cms/tracking/output/minbias_pythia8_358p3_V26B
#ui_working_dir = /afs/cern.ch/cms/tracking/output/qcdpt15_358p3_V26B
#ui_working_dir = /afs/cern.ch/cms/tracking/output/minbias_357_rereco_V26A
#ui_working_dir = /afs/cern.ch/cms/tracking/output/minbias_355_MC_3XY_V25
#ui_working_dir = /afs/cern.ch/cms/tracking/output/minbias_900GeV_352_rereco_V22A
#ui_working_dir = /afs/cern.ch/cms/tracking/output/minbias_900GeV_336p3_V8K
#ui_working_dir = /afs/cern.ch/cms/tracking/output/minbias_900GeV_DW_336p3_V8K

### To specify the UI directory where to store the CMS executable output
### FULL path is mandatory. Default is  <ui_working_dir>/res will be used.
#outputdir= /full/path/yourOutDir

### To specify the UI directory where to store the stderr, stdout and .BrokerInfo of submitted jobs
### FULL path is mandatory. Default is <ui_working_dir>/res will be used.
#logdir= /full/path/yourLogDir

### OUTPUT files INTO A SE
copy_data = 0

### if you want to copy data in a "official CMS site"
### you have to specify the name as written in 
#storage_element = T2_IT_Bari
### the user_remote_dir will be created under the SE mountpoint
### in the case of publication this directory is not considered
#user_remote_dir = name_directory_you_want

### if you want to copy your data at CAF
#storage_element = T2_CH_CAF
### the user_remote_dir will be created under the SE mountpoint
### in the case of publication this directory is not considered
#user_remote_dir = name_directory_you_want

### if you want to copy your data to your area in castor at cern
### or in a "not official CMS site" you have to specify the complete name of SE
#storage_element=srm-cms.cern.ch
### this directory is the mountpoin of SE 
#storage_path=/srm/managerv2?SFN=/castor/cern.ch
### directory or tree of directory under the mounpoint 
#user_remote_dir = /user/v/venturia/skims/minbias352_preprod


### To publish produced output in a local istance of DBS set publish_data = 1
publish_data=0
### Specify the dataset name. The full path will be <primarydataset>/<publish_data_name>/USER
publish_data_name = name_you_prefer
### Specify the URL of DBS istance where CRAB has to publish the output files
#dbs_url_for_publication = https://cmsdbsprod.cern.ch:8443/cms_dbs_caf_analysis_01_writer/servlet/DBSServlet 

### To specify additional files to be put in InputSandBox
### write the full path  if the files are not in the current directory
### (wildcard * are allowed): comma separated list
#additional_input_files = file1, file2, /full/path/file3

#if server
#thresholdLevel = 100
#eMail = your@Email.address

[GRID]
#
## RB/WMS management:
rb = CERN

##  Black and White Lists management:
## By Storage
se_black_list = T0,T1
#se_black_list = T2_US_Purdue
#se_white_list =

## By ComputingElement
#ce_black_list =
#ce_white_list =

[CONDORG]

# Set this to condor to override the batchsystem defined in gridcat.
#batchsystem = condor

# Specify addition condor_g requirments
# use this requirment to run on a cms dedicated hardare
# globus_rsl = (condor_submit=(requirements 'ClusterName == \"CMS\" && (Arch == \"INTEL\" || Arch == \"X86_64\")'))
# use this requirement to run on the new hardware
#globus_rsl = (condor_submit=(requirements 'regexp(\"cms-*\",Machine)'))

